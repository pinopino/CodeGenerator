		/// <summary>
        /// 更新{0}
        /// </summary>
        /// <param name="model">{1}</param>
		/// <param name="fields">需要更新的字段名字</param>
		/// <param name="reverse">反转给定的更新字段</param>
        /// <returns>是否成功，true为成功</returns>
        public static bool Update({2} model, Expression<Func<{2}, bool>> predicate, bool reverse, SqlConnection conn, SqlTransaction transaction, params {2}Column[] fields)
        {{
			var where_str = string.Empty;
			if (predicate != null)
			{{
				var parser = new PredicateParser();
				where_str = parser.Parse(predicate);
			}}
			else
			{{
				where_str = "{3}";
			}}

            var sql = new StringBuilder();
            sql.Append("UPDATE [{2}]");
            if (fields == null || fields.Length == 0)
            {{
                 sql.Append(" SET {4}");
            }}
            else
            {{
				if (reverse == true)
				{{
					 fields = ({2}Column[])Columns.All.Except(fields);
				}}
                sql.Append(" SET ");
                for (int i = 0; i < fields.Length; i++)
                {{
					if (fields[i].IsAddEqual)
					{{
						sql.Append("[" + fields[i].Name + "] += @" + fields[i].Name + "");
						fields[i].SetAddEqual();
					}}
					else
					{{
						sql.Append("[" + fields[i].Name + "] = @" + fields[i].Name + "");
					}}
                    
                    if (i != fields.Length - 1)
                    {{
                        sql.Append(",");
                    }}
                }}
            }}
            sql.Append(" WHERE " + where_str);
            var ret = false;
            if (conn != null)
            {{
                if (transaction == null)
                {{
                    throw new ArgumentNullException("transaction");
                }}
                ret = conn.Execute(sql.ToString(), model, transaction) > 0;
            }}
            else
            {{
                using (var conn1 = GetOpenConnection())
                {{
                    ret = conn1.Execute(sql.ToString(), model) > 0;
                }}
            }}

            return ret;
        }}
